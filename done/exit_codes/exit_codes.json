{"1": {"description": "Catchall for general errors", "example": "let \"var1 = 1/0\"", "meaning": "Miscellaneous errors, such as \"divide by\r\n\t        zero\" and other impermissible operations"}, "2": {"description": "Misuse of shell builtins (according to Bash documentation)", "example": "empty_function() {}", "meaning": "Missing keyword\r\n              or command, or permission problem (and diff return code\r\n\t      on a failed binary file comparison)."}, "126": {"description": "Command invoked cannot execute", "example": "/dev/null", "meaning": "Permission problem or command is not an executable"}, "127": {"description": "\"command not found\"", "example": "illegal_command", "meaning": "Possible problem with $PATH or a typo"}, "128": {"description": "Fatal error signal \"n\"", "example": "kill -9 $PPID of script", "meaning": "$? returns\r\n\t      137 (128 + 9)"}, "130": {"description": "Script terminated by Control-C", "example": "Ctl-C", "meaning": "Control-C is fatal error signal\r\n\t      2, (130 = 128 + 2, see above)"}, "255": {"description": "Exit status out of range", "example": "exit -1", "meaning": "exit takes only integer args in the\r\n\t        range 0 - 255"}}